package hospital.management.system;import javax.swing.*;import java.awt.*;import java.awt.event.*;import java.sql.ResultSet;import java.util.Date;public class NEW_PATIENT extends JFrame implements ActionListener {    JComboBox comboBox;    JTextField textFieldNumber, textName, textFieldDisease, textFieldDeposite;    JRadioButton r1, r2;    Choice c1;    JLabel date;    JButton b1, b2;    NEW_PATIENT() {        JPanel panel = new JPanel();        panel.setBounds(5, 5, 840, 540);        panel.setBackground(new Color(90, 156, 163));        panel.setLayout(null);        add(panel);        ImageIcon imageIcon = new ImageIcon(ClassLoader.getSystemResource("icon/patient.png"));        Image image = imageIcon.getImage().getScaledInstance(200, 200, Image.SCALE_DEFAULT);        ImageIcon imageIcon1 = new ImageIcon(image);        JLabel label = new JLabel(imageIcon1);        label.setBounds(550, 150, 200, 200);        panel.add(label);        JLabel labelName = new JLabel("NEW PATIENT FORM");        labelName.setBounds(118, 11, 260, 53);        labelName.setFont(new Font("Tahoma", Font.BOLD, 20));        panel.add(labelName);        JLabel labelID = new JLabel("ID :");        labelID.setBounds(35, 76, 200, 14);        labelID.setFont(new Font("Tahoma", Font.BOLD, 14));        labelID.setForeground(Color.white);        panel.add(labelID);        comboBox = new JComboBox(new String[]{"Aadhar Card", "Voter Id", "Driving License"});        comboBox.setBounds(271, 73, 150, 20);        comboBox.setBackground(new Color(3, 45, 48));        comboBox.setForeground(Color.white);        comboBox.setFont(new Font("Tahoma", Font.BOLD, 14));        panel.add(comboBox);        JLabel labelNumber = new JLabel("Number :");        labelNumber.setBounds(35, 111, 200, 14);        labelNumber.setFont(new Font("Tahoma", Font.BOLD, 14));        labelNumber.setForeground(Color.white);        panel.add(labelNumber);        textFieldNumber = new JTextField();        textFieldNumber.setBounds(271, 111, 150, 20);        panel.add(textFieldNumber);        //  Dynamic Validation for ID Number while typing        textFieldNumber.addKeyListener(new KeyAdapter() {            public void keyTyped(KeyEvent evt) {                String idType = (String) comboBox.getSelectedItem();                char c = evt.getKeyChar();                if (idType.equals("Aadhar Card")) {                    if (!Character.isDigit(c)) {                        evt.consume();                        Toolkit.getDefaultToolkit().beep();                    }                    if (textFieldNumber.getText().length() >= 12) {                        evt.consume();                    }                } else if (idType.equals("Voter Id")) {                    if (!Character.isLetterOrDigit(c)) {                        evt.consume();                        Toolkit.getDefaultToolkit().beep();                    }                    if (textFieldNumber.getText().length() >= 10) {                        evt.consume();                    }                } else if (idType.equals("Driving License")) {                    if (!Character.isLetterOrDigit(c)) {                        evt.consume();                        Toolkit.getDefaultToolkit().beep();                    }                    if (textFieldNumber.getText().length() >= 16) {                        evt.consume();                    }                }            }        });        //  Show message when user leaves the Number field        textFieldNumber.addFocusListener(new FocusAdapter() {            public void focusLost(FocusEvent e) {                String idType = (String) comboBox.getSelectedItem();                String idNumber = textFieldNumber.getText();                if (idType.equals("Aadhar Card") && idNumber.length() != 12) {                    JOptionPane.showMessageDialog(null, "Aadhar Card number must be exactly 12 digits.");                } else if (idType.equals("Voter Id") && idNumber.length() != 10) {                    JOptionPane.showMessageDialog(null, "Voter ID must be exactly 10 alphanumeric characters.");                } else if (idType.equals("Driving License") && (idNumber.length() < 15 || idNumber.length() > 16)) {                    JOptionPane.showMessageDialog(null, "Driving License number must be 15 or 16 alphanumeric characters.");                }            }        });        JLabel labelName1 = new JLabel("Name :");        labelName1.setBounds(35, 151, 200, 14);        labelName1.setFont(new Font("Tahoma", Font.BOLD, 14));        labelName1.setForeground(Color.white);        panel.add(labelName1);        textName = new JTextField();        textName.setBounds(271, 151, 150, 20);        panel.add(textName);        textName.addKeyListener(new KeyAdapter() {            public void keyTyped(KeyEvent evt) {                char c = evt.getKeyChar();                if (!Character.isLetter(c) && !Character.isWhitespace(c)) {                    evt.consume();                }            }        });        JLabel labelGender = new JLabel("Gender :");        labelGender.setBounds(35, 191, 200, 14);        labelGender.setFont(new Font("Tahoma", Font.BOLD, 14));        labelGender.setForeground(Color.white);        panel.add(labelGender);        r1 = new JRadioButton("Male");        r1.setFont(new Font("Tahoma", Font.BOLD, 14));        r1.setForeground(Color.white);        r1.setBackground(new Color(109, 164, 170));        r1.setBounds(271, 191, 80, 15);        panel.add(r1);        r2 = new JRadioButton("Female");        r2.setFont(new Font("Tahoma", Font.BOLD, 14));        r2.setForeground(Color.white);        r2.setBackground(new Color(109, 164, 170));        r2.setBounds(350, 191, 80, 15);        panel.add(r2);        ButtonGroup bg = new ButtonGroup();        bg.add(r1);        bg.add(r2);        JLabel labelDisease = new JLabel("Disease :");        labelDisease.setBounds(35, 231, 200, 14);        labelDisease.setFont(new Font("Tahoma", Font.BOLD, 14));        labelDisease.setForeground(Color.white);        panel.add(labelDisease);        textFieldDisease = new JTextField();        textFieldDisease.setBounds(271, 231, 150, 20);        panel.add(textFieldDisease);        JLabel labelRoom = new JLabel("Room :");        labelRoom.setBounds(35, 274, 200, 14);        labelRoom.setFont(new Font("Tahoma", Font.BOLD, 14));        labelRoom.setForeground(Color.white);        panel.add(labelRoom);        c1 = new Choice();        try {            conn c = new conn();            ResultSet resultSet = c.statement.executeQuery("select * from Room");            while (resultSet.next()) {                c1.add(resultSet.getString("room_no"));            }        } catch (Exception e) {            e.printStackTrace();        }        c1.setBounds(271, 274, 150, 20);        c1.setFont(new Font("Tahoma", Font.BOLD, 14));        c1.setForeground(Color.WHITE);        c1.setBackground(new Color(3, 45, 48));        panel.add(c1);        JLabel labelDate = new JLabel("Time :");        labelDate.setBounds(35, 316, 200, 14);        labelDate.setFont(new Font("Tahoma", Font.BOLD, 14));        labelDate.setForeground(Color.white);        panel.add(labelDate);        Date date1 = new Date();        date = new JLabel("" + date1);        date.setBounds(271, 316, 250, 14);        date.setForeground(Color.white);        date.setFont(new Font("Tahoma", Font.BOLD, 14));        panel.add(date);        JLabel labelDeposite = new JLabel("Deposit :");        labelDeposite.setBounds(35, 359, 200, 17);        labelDeposite.setFont(new Font("Tahoma", Font.BOLD, 14));        labelDeposite.setForeground(Color.white);        panel.add(labelDeposite);        textFieldDeposite = new JTextField();        textFieldDeposite.setBounds(271, 359, 150, 20);        panel.add(textFieldDeposite);        textFieldDeposite.addKeyListener(new KeyAdapter() {            public void keyTyped(KeyEvent evt) {                char c = evt.getKeyChar();                if (!Character.isDigit(c)) {                    evt.consume();                }            }        });        b1 = new JButton("ADD");        b1.setBounds(100, 430, 120, 30);        b1.setForeground(Color.WHITE);        b1.setBackground(Color.black);        b1.addActionListener(this);        panel.add(b1);        b2 = new JButton("Back");        b2.setBounds(260, 430, 120, 30);        b2.setForeground(Color.WHITE);        b2.setBackground(Color.black);        b2.addActionListener(this);        panel.add(b2);        setUndecorated(true);        setSize(850, 550);        setLayout(null);        setLocation(300, 250);        setVisible(true);    }    @Override    public void actionPerformed(ActionEvent e) {        if (e.getSource() == b1) {            String idType = (String) comboBox.getSelectedItem();            String idNumber = textFieldNumber.getText();            String name = textName.getText();            String gender = null;            if (r1.isSelected()) {                gender = "Male";            } else if (r2.isSelected()) {                gender = "Female";            }            String disease = textFieldDisease.getText();            String room = c1.getSelectedItem();            String time = date.getText();            String deposit = textFieldDeposite.getText();            if (idNumber.isEmpty() || name.isEmpty() || gender == null || disease.isEmpty() || deposit.isEmpty()) {                JOptionPane.showMessageDialog(null, "Please fill all fields!");                return;            }            if (idType.equals("Aadhar Card")) {                if (!idNumber.matches("\\d{12}")) {                    JOptionPane.showMessageDialog(null, "Invalid Aadhar Number. Must be exactly 12 digits.");                    return;                }            } else if (idType.equals("Voter Id")) {                if (!idNumber.matches("[A-Za-z0-9]{10}")) {                    JOptionPane.showMessageDialog(null, "Invalid Voter ID. Must be 10 alphanumeric characters.");                    return;                }            } else if (idType.equals("Driving License")) {                if (!idNumber.matches("[A-Za-z0-9]{15,16}")) {                    JOptionPane.showMessageDialog(null, "Invalid Driving License Number. Must be 15-16 alphanumeric characters.");                    return;                }            }            try {                conn c = new conn();                String q = "INSERT INTO Patient_Info values ('" + idType + "', '" + idNumber + "','" + name + "','" + gender + "', '" + disease + "', '" + room + "', '" + time + "', '" + deposit + "')";                String q1 = "UPDATE Room SET Availability = 'Occupied' WHERE room_no = '" + room + "'";                c.statement.executeUpdate(q);                c.statement.executeUpdate(q1);                JOptionPane.showMessageDialog(null, "Added Successfully");                setVisible(false);            } catch (Exception ex) {                ex.printStackTrace();            }        } else {            setVisible(false);        }    }    public static void main(String[] args) {        new NEW_PATIENT();    }}